
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = "leftMOVleftPUSHleftPOPIDENTIFIER MOV NEWLINE NUMBER POP PUSH programme : expression  programme : expression NEWLINE programme expression :  MOV expression ',' expressionexpression :  PUSH expressionexpression :  POP expressionexpression : NUMBER\n        | IDENTIFIER "
    
_lr_action_items = {'MOV':([0,3,4,5,8,13,],[3,3,3,3,3,3,]),'PUSH':([0,3,4,5,8,13,],[4,4,4,4,4,4,]),'POP':([0,3,4,5,8,13,],[5,5,5,5,5,5,]),'NUMBER':([0,3,4,5,8,13,],[6,6,6,6,6,6,]),'IDENTIFIER':([0,3,4,5,8,13,],[7,7,7,7,7,7,]),'$end':([1,2,6,7,10,11,12,14,],[0,-1,-6,-7,-4,-5,-2,-3,]),'NEWLINE':([2,6,7,10,11,14,],[8,-6,-7,-4,-5,-3,]),',':([6,7,9,10,11,14,],[-6,-7,13,-4,-5,-3,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'programme':([0,8,],[1,12,]),'expression':([0,3,4,5,8,13,],[2,9,10,11,2,14,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programme","S'",1,None,None,None),
  ('programme -> expression','programme',1,'p_programme_statement','parser1.py',7),
  ('programme -> expression NEWLINE programme','programme',3,'p_programme_recursive','parser1.py',11),
  ('expression -> MOV expression , expression','expression',4,'p_expression_mov','parser1.py',15),
  ('expression -> PUSH expression','expression',2,'p_expression_push','parser1.py',19),
  ('expression -> POP expression','expression',2,'p_expression_pop','parser1.py',23),
  ('expression -> NUMBER','expression',1,'p_expression_num_or_var','parser1.py',27),
  ('expression -> IDENTIFIER','expression',1,'p_expression_num_or_var','parser1.py',28),
]
